/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DEditTrain.java
 *
 * Created on 18.09.2010, 19:16:47
 */
package rzd.dispStatinonFleet;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

import logic.BusinessLogic;
import rzd.ControllerMain;
import rzd.carFleet.DCarLocation;
import rzd.model.Model;
import rzd.model.objects.*;
import rzd.utils.Utils;
import rzd.model.objects.structure.CarLocationStructure;

/**
 * @author Евгений
 */
public class DEditTrain extends javax.swing.JDialog {

    private Train train;
    private DCarLocation dCarLocation;

    /**
     * Creates new form DEditTrain
     */
    public DEditTrain(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dCarLocation = new DCarLocation(null, true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lDT = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cRoad = new javax.swing.JComboBox();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        fChief = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lCarInTrain = new javax.swing.JList(new DefaultListModel());
        jScrollPane2 = new javax.swing.JScrollPane();
        lCarAll = new javax.swing.JList(new DefaultListModel());
        bRight = new javax.swing.JButton();
        bLeft = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cRoadType = new javax.swing.JComboBox();
        fRoute = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        fDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setPreferredSize(new java.awt.Dimension(346, 239));

        lDT.setFont(new java.awt.Font("Times New Roman", 2, 13)); // NOI18N
        lDT.setForeground(new java.awt.Color(82, 82, 82));
        lDT.setText("Дата и время");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(82, 82, 82));
        jLabel3.setText("Путь");

        cRoad.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        bSave.setText("Сохранить");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setText("Отмена");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(82, 82, 82));
        jLabel4.setText("Начальник поезда");

        fChief.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lCarInTrain.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lCarInTrain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lCarInTrain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showInfByCar(evt);
            }
        });
        jScrollPane1.setViewportView(lCarInTrain);

        lCarAll.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lCarAll.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lCarAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showInfByCar(evt);
            }
        });
        jScrollPane2.setViewportView(lCarAll);

        bRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rzd/resurce/left.png"))); // NOI18N
        bRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRightActionPerformed(evt);
            }
        });

        bLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rzd/resurce/right.png"))); // NOI18N
        bLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLeftActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(82, 82, 82));
        jLabel5.setText("Вагоны в составе");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(82, 82, 82));
        jLabel6.setText("Все вагоны");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 2, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(82, 82, 82));
        jLabel7.setText("Маршрут");

        cRoadType.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        cRoadType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cRoadTypeItemStateChanged(evt);
            }
        });

        fRoute.setBackground(new java.awt.Color(250, 250, 250));
        fRoute.setEditable(false);
        fRoute.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel43.setForeground(new java.awt.Color(255, 0, 0));
        jLabel43.setText("*");

        fDate.setBackground(new java.awt.Color(250, 250, 250));
        fDate.setEditable(false);
        fDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fDate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(82, 82, 82));
        jLabel8.setText("Информация о поезде");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(82, 82, 82));
        jLabel9.setText("Отправление/прибытие");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(bSave)
                                                .addGap(18, 18, 18)
                                                .addComponent(bCancel))
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fRoute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                        .addComponent(jLabel7)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cRoad, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cRoadType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(fChief, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel43)))
                                        .addComponent(fDate, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(bLeft, 0, 0, Short.MAX_VALUE)
                                        .addComponent(bRight, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                        .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(fChief, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lDT)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cRoadType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cRoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(bSave)
                                        .addComponent(bCancel)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(184, 184, 184)
                                        .addComponent(bRight, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(249, 249, 249))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))))
                        .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRightActionPerformed
        removeCarInTrain();

    }//GEN-LAST:event_bRightActionPerformed

    private void bLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLeftActionPerformed
        addCarInTrain();
    }//GEN-LAST:event_bLeftActionPerformed

    private void cRoadTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cRoadTypeItemStateChanged
        RoadType rt = (RoadType) cRoadType.getSelectedItem();
        cRoad.removeAllItems();
        if (rt != null) {
            ArrayList<Road> rr = Model.getModel().getRoadsByType(rt);
            if (rr != null && rr.size() != 0) {
                for (Road r : rr) {
                    cRoad.addItem(r);
                }
            }
        }
    }//GEN-LAST:event_cRoadTypeItemStateChanged

    private void addCarInTrain() {
        Car car = (Car) lCarAll.getSelectedValue();
        if (car != null) {
            ((DefaultListModel) lCarInTrain.getModel()).addElement(car);
            ((DefaultListModel) lCarAll.getModel()).removeElement(car);
        }
    }

    private void removeCarInTrain() {
        Car car = (Car) lCarInTrain.getSelectedValue();
        if (car != null) {
            boolean b = false;
            System.out.println("ttt=" + car.getCarLocation().getIdLocation());
            if (car.getCarLocation().getIdLocation() == BusinessLogic.IN_TRAIN) {
                System.out.println("ddd");
                dCarLocation.setLocationRelativeTo(this);
                CarLocationStructure carLS = dCarLocation.open(car);
                if (carLS != null) {
                    try {
                        b = Model.getModel().setCarLocation(carLS.getCar(), carLS.getRoad(), carLS.getRepair());
                        System.out.println("b=" + b);
                        if (b) {
                            car = carLS.getCar();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Внимание", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } else {
                b = true;
            }
            if (b) {
                ((DefaultListModel) lCarAll.getModel()).addElement(car);
                ((DefaultListModel) lCarInTrain.getModel()).removeElement(car);
            }
        }
    }

    private void showInfByCar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showInfByCar
        if (evt.getSource() instanceof JList && evt.getButton() == 1 && evt.getClickCount() == 2) {
            JList list = (JList) evt.getSource();
            Car car = ((Car) list.getSelectedValue());
            ControllerMain.getInstans().showCarInf(list, evt.getX() + 5, evt.getY() + 5, car);
        }

    }//GEN-LAST:event_showInfByCar

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        save();
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        close();
    }//GEN-LAST:event_bCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    private void save() {
        if (isCorrectInput()) {
            if (Model.getModel().isRoadReadyForTrain(train)) {
                ArrayList<Car> cars = new ArrayList<Car>(lCarInTrain.getModel().getSize());
                for (int i = 0; i < lCarInTrain.getModel().getSize(); i++) {
                    cars.add((Car) lCarInTrain.getModel().getElementAt(i));
                }
//                System.out.println(train.getId());
                this.train = new Train(
                        train.getId(),
                        train.getDtDeparture(),
                        train.getDtDestination(),
                        fChief.getText().trim(),
                        train.getShedule(),
                        train.getRoute(),
                        train.getTrainStatus(),
                        (Road) cRoad.getSelectedItem(),
                        cars
                );
//                this.train = t;
                setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Путь занят, укажите другой путь", "Внимание...", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Заполните обязательные поля");
        }
    }

    private void close() {
        train = null;
        setVisible(false);
    }

    //Возаращеет Train,Route,Road,cars

    public Train open(Train train) {
        if (train == null) close();
        this.train=train;
        cRoadType.removeAllItems();
        cRoad.removeAllItems();
        RoadType rtTmp = null;
        //Запоняем справочники пути
        ArrayList<RoadType> roadTypes = Model.getModel().getRoadTypes();
        if (roadTypes == null) {
            JOptionPane.showMessageDialog(null, "Справочник путей пуст");
            return null;
        }
        for (RoadType roadType : roadTypes) {
            cRoadType.addItem(roadType);
            if (train.getRoad() != null) {
                ArrayList<Road> lr = Model.getModel().getRoadsByType(roadType);
                if (lr != null) {
                    if (lr.contains(lr)) {
                        rtTmp = roadType;
                    }
                }
            }
        }
        if (rtTmp != null) {
            cRoadType.setSelectedItem(rtTmp);
            ArrayList<Road> roads = Model.getModel().getRoadsByType(rtTmp);
            for (Road road : roads) {
                cRoad.addItem(road);
            }
            cRoad.setSelectedItem(train.getRoad());
        }

        ((DefaultListModel) lCarAll.getModel()).removeAllElements();
        ArrayList<Car> carsAll = Model.getModel().getFreeCars();
        if (carsAll != null && carsAll.size() != 0) {
            for (Car c : carsAll) {
                // System.out.println(lCarAll.getModel().getClass().toString());
                ((DefaultListModel) lCarAll.getModel()).addElement(c);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Справочник вагонов пуст");
            return null;
        }

        ((DefaultListModel) lCarInTrain.getModel()).removeAllElements();
        if (train != null) {
            if (train.getRoute().getSheduleForward().equals(train.getShedule())) {
                lDT.setText("Дтата и время отправления");
                fDate.setText(Utils.convertDateTimeToStr(train.getDtDeparture()));
                fRoute.setText(train.getRoute().getNumberForward() + "  " + train.getRoute().getCityFrom() + " - " + train.getRoute().getCityTo());
            } else if (train.getRoute().getSheduleBack().equals(train.getShedule())) {
                lDT.setText("Дтата и время прибытия");
                fDate.setText(Utils.convertDateTimeToStr(train.getDtDestination()));
                fRoute.setText(train.getRoute().getNumberBack() + "  " + train.getRoute().getCityTo() + " - " + train.getRoute().getCityFrom());
            } else {
                JOptionPane.showMessageDialog(this, "Невозможно сопоставить с расписанием");
            }

            fChief.setText(train.getChief());
            ArrayList<Car> carsInTrain = train.getCarsIn();
            if (carsInTrain != null) {
                //  System.out.println("Load cars in train="+carsInTrain.size());
                for (Car c : carsInTrain) {
                    ((DefaultListModel) lCarInTrain.getModel()).addElement(c);
                }
            }
        }
        setVisible(true);
        return this.train;
    }

    private boolean isCorrectInput() {
        if (!fChief.getText().trim().equals("") &&
                !fDate.getText().trim().equals("") &&
                !fDate.getText().trim().equals("") &&
                cRoad.getSelectedItem() != null) {
            return true;
        } else {
            return false;
        }
    }
//    private ArrayList<Road> updateListRoad(RoadType rt){
//    H
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bLeft;
    private javax.swing.JButton bRight;
    private javax.swing.JButton bSave;
    private javax.swing.JComboBox cRoad;
    private javax.swing.JComboBox cRoadType;
    private javax.swing.JTextField fChief;
    private javax.swing.JTextField fDate;
    private javax.swing.JTextField fRoute;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lCarAll;
    private javax.swing.JList lCarInTrain;
    private javax.swing.JLabel lDT;
    // End of variables declaration//GEN-END:variables
}
