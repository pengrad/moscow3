/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DEditTrain.java
 *
 * Created on 18.09.2010, 19:16:47
 */
package rzd.dispStatinonFleet;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

import javax.swing.JPopupMenu;

import rzd.ControllerMain;
import rzd.carFleet.PCarInformation;
import rzd.model.Model;
import rzd.utils.Utils;
import rzd.model.objects.Car;
import rzd.model.objects.Road;
import rzd.model.objects.RoadType;
import rzd.model.objects.Train;

/**
 * @author Евгений
 */
public class DEditTrain extends javax.swing.JDialog {

    private Train train;

    /**
     * Creates new form DEditTrain
     */
    public DEditTrain(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lDT = new javax.swing.JLabel();
        fDate = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        cRoad = new javax.swing.JComboBox();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        fChief = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lCarInTrain = new javax.swing.JList(new DefaultListModel());
        jScrollPane2 = new javax.swing.JScrollPane();
        lCarAll = new javax.swing.JList(new DefaultListModel());
        bRight = new javax.swing.JButton();
        bLeft = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cRoadType = new javax.swing.JComboBox();
        fRoute = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(346, 239));

        lDT.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lDT.setText("Дата и время отправления/прибытия");

        fDate.setBackground(new java.awt.Color(255, 255, 255));
        fDate.setEditable(false);
        fDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat(""))));
        fDate.setToolTipText("Например 23.11.2010 12:45");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel3.setText("Путь отроавления/прибытия");

        bSave.setText("Сохранить");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setText("Отмена");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setText("Начальник поезда");

        lCarInTrain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showInfByCar(evt);
            }
        });
        jScrollPane1.setViewportView(lCarInTrain);

        lCarAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showInfByCar(evt);
            }
        });
        jScrollPane2.setViewportView(lCarAll);

        bRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rzd/resurce/left.png"))); // NOI18N
        bRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRightActionPerformed(evt);
            }
        });

        bLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rzd/resurce/right.png"))); // NOI18N
        bLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLeftActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel5.setText("Вагоны в составе");

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel6.setText("Все вагоны");

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel7.setText("Маршрут");

        cRoadType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cRoadTypeItemStateChanged(evt);
            }
        });

        fRoute.setBackground(new java.awt.Color(255, 255, 255));
        fRoute.setEditable(false);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel43.setForeground(new java.awt.Color(255, 0, 0));
        jLabel43.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bSave)
                        .addGap(18, 18, 18)
                        .addComponent(bCancel))
                    .addComponent(jLabel7)
                    .addComponent(fDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lDT, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(fRoute, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fChief, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel43))
                    .addComponent(cRoad, 0, 233, Short.MAX_VALUE)
                    .addComponent(cRoadType, 0, 233, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bLeft, 0, 0, Short.MAX_VALUE)
                            .addComponent(bRight, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(lDT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fChief, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(14, 14, 14)
                        .addComponent(cRoadType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cRoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bSave)
                            .addComponent(bCancel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addComponent(bRight, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(249, 249, 249))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRightActionPerformed
        Object[] selected = lCarInTrain.getSelectedValues();
        if (selected != null) {
            for (int i = 0; i < selected.length; i++) {
                ((DefaultListModel) lCarAll.getModel()).addElement(selected[i]);
                ((DefaultListModel) lCarInTrain.getModel()).removeElement(selected[i]);
            }
        }
    }//GEN-LAST:event_bRightActionPerformed

    private void bLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLeftActionPerformed
        Object[] selected = lCarAll.getSelectedValues();
        if (selected != null) {
            for (int i = 0; i < selected.length; i++) {
                ((DefaultListModel) lCarInTrain.getModel()).addElement(selected[i]);
                ((DefaultListModel) lCarAll.getModel()).removeElement(selected[i]);
            }

        }
    }//GEN-LAST:event_bLeftActionPerformed


    private void cRoadTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cRoadTypeItemStateChanged
        RoadType rt = (RoadType) cRoadType.getSelectedItem();
        cRoad.removeAllItems();
        if (rt != null) {
            ArrayList<Road> rr = Model.getModel().getRoadsByType(rt);
            if (rr != null && rr.size() != 0) {
                for (Road r : rr) {
                    cRoad.addItem(r);
                }
            }
        }
    }//GEN-LAST:event_cRoadTypeItemStateChanged

    private void showInfByCar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showInfByCar
        if (evt.getSource() instanceof JList && evt.getButton() == 1 && evt.getClickCount() == 2) {
            JList list = (JList) evt.getSource();
            Car car = ((Car) list.getSelectedValue());
            ControllerMain.getInstans().showCarInf(list, evt.getX() + 5, evt.getY() + 5, car);
        }

    }//GEN-LAST:event_showInfByCar

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        if (isCorrectInput()) {
            if (train != null) {
                train.setChief(fChief.getText().trim());
                train.setRoad((Road) cRoad.getSelectedItem());
                ArrayList<Car> cars = new ArrayList<Car>(lCarInTrain.getModel().getSize());
                for (int i = 0; i < lCarInTrain.getModel().getSize(); i++) {
                    cars.add((Car) lCarInTrain.getModel().getElementAt(i));
                }
                // System.out.println("Save cars in train="+cars.size());
                train.setCarsIn(cars);
                setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Заполните обязательные поля");
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        train = null;
        setVisible(false);
    }//GEN-LAST:event_bCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        train = null;
        setVisible(false);
    }//GEN-LAST:event_formWindowClosing


    //Возаращеет Train,Route,Road,cars

    public Train open(Train train) {
        this.train = train;
        cRoadType.removeAllItems();
        cRoad.removeAllItems();
        RoadType rtTmp = null;
        //Запоняем справочники пути
        ArrayList<RoadType> roadTypes = Model.getModel().getRoadTypes();
        if (roadTypes == null) {
            JOptionPane.showMessageDialog(null, "Справочник путей пуст");
            return null;
        }
        for (RoadType roadType : roadTypes) {
            cRoadType.addItem(roadType);
            if (train.getRoad() != null) {
                ArrayList<Road> lr = Model.getModel().getRoadsByType(roadType);
                if (lr != null) {
                    if (lr.contains(lr)) {
                        rtTmp = roadType;
                    }
                }
            }
        }
        if (rtTmp != null) {
            cRoadType.setSelectedItem(rtTmp);
            ArrayList<Road> roads = Model.getModel().getRoadsByType(rtTmp);
            for (Road road : roads) {
                cRoad.addItem(road);
            }
            cRoad.setSelectedItem(train.getRoad());
        }

        ((DefaultListModel) lCarAll.getModel()).removeAllElements();
        ArrayList<Car> carsAll = Model.getModel().getCars();
        if (carsAll != null && carsAll.size() != 0) {
            for (Car c : carsAll) {
                // System.out.println(lCarAll.getModel().getClass().toString());
                ((DefaultListModel) lCarAll.getModel()).addElement(c);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Справочник вагонов пуст");
            return null;
        }

        ((DefaultListModel) lCarInTrain.getModel()).removeAllElements();
        if (train != null) {
            if (train.getRoute().getSheduleForward().equals(train.getShedule())) {
                lDT.setText("Дтата и время отправления");
                fDate.setText(Utils.convertDateTimeToStr(train.getDtDeparture()));
                fRoute.setText(train.getRoute().getNumberForward() + "  " + train.getRoute().getCityFrom() + " - " + train.getRoute().getCityTo());
            } else if (train.getRoute().getSheduleBack().equals(train.getShedule())) {
                lDT.setText("Дтата и время прибытия");
                fDate.setText(Utils.convertDateTimeToStr(train.getDtDestination()));
                fRoute.setText(train.getRoute().getNumberBack() + "  " + train.getRoute().getCityTo() + " - " + train.getRoute().getCityFrom());
            } else {
                JOptionPane.showMessageDialog(this, "Невозможно сопоставить с расписанием");
            }

            fChief.setText(train.getChief());
            ArrayList<Car> carsInTrain = train.getCarsIn();
            if (carsInTrain != null) {
                //  System.out.println("Load cars in train="+carsInTrain.size());
                for (Car c : carsInTrain) {
                    ((DefaultListModel) lCarInTrain.getModel()).addElement(c);
                }
            }
        }
        setVisible(true);
        return this.train;
    }

    private boolean isCorrectInput() {
        if (!fChief.getText().trim().equals("") &&
                !fDate.getText().trim().equals("") &&
                !fDate.getText().trim().equals("") &&
                cRoad.getSelectedItem() != null) {
            return true;
        } else {
            return false;
        }
    }
//    private ArrayList<Road> updateListRoad(RoadType rt){
//    H
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bLeft;
    private javax.swing.JButton bRight;
    private javax.swing.JButton bSave;
    private javax.swing.JComboBox cRoad;
    private javax.swing.JComboBox cRoadType;
    private javax.swing.JTextField fChief;
    private javax.swing.JFormattedTextField fDate;
    private javax.swing.JTextField fRoute;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lCarAll;
    private javax.swing.JList lCarInTrain;
    private javax.swing.JLabel lDT;
    // End of variables declaration//GEN-END:variables
}
